{"version":3,"sources":["components/logo.svg","components/ExchangeHeader.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","header","Img","img","ExchangeHeader","src","logo","alt","Component","CoinRow","tr","Coin","props","name","ticker","showBalance","balance","price","onClick","event","preventDefault","handleRefresh","id","CoinList","coinData","map","element","Section","section","AccountBalance","buttonText","amount","toggleShowBalance","Div","div","App","useState","setShowBalance","setCoinData","getPrice","a","axios","get","response","coin","data","console","log","quotes","USD","parseFloat","toFixed","componentDidMount","coinIds","slice","promises","Promise","all","responses","newCoinData","key","symbol","rank","useEffect","length","idToChange","newPrice","values","newValues","totalBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.618375d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport logo from './logo.svg';\r\n\r\n\r\nconst Header = styled.header`\r\n    background-color: darkblue;\r\n    min-height: 10vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n`;\r\n\r\nconst Img=styled.img`\r\n    height: 3rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header>\r\n                    <Img src={logo} alt=\"React logo\" />\r\n                    <p>Coin Exchange  {123}</p>\r\n                </Header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst CoinRow = styled.tr`\r\n    td {\r\n        border: 1px solid #cccccc;\r\n        width: 25vh;\r\n    }\r\n`;\r\n\r\n/*\r\nexport default class Coin extends Component {\r\n\r\n    handleClick = (event) => {\r\n\r\n        //prevent default submit;\r\n        event.preventDefault();\r\n        this.props.handleRefresh(this.props.ticker);\r\n    }\r\n\r\n    \r\n    render() {\r\n  \r\n        return (\r\n            <CoinRow>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.ticker}</td>\r\n                <td>{this.props.showBalance ? this.props.balance : \"*****\"}</td>\r\n                <td>${this.props.price}</td>\r\n                <td><button onClick={this.handleClick}>Refresh</button></td>\r\n            </CoinRow>\r\n        )\r\n    }\r\n\r\n}\r\n*/\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleClick = (event) => {\r\n\r\n        //prevent default submit;\r\n        event.preventDefault();\r\n        props.handleRefresh(props.id);\r\n    }\r\n\r\n    return (\r\n        <CoinRow>\r\n            <td>{props.name}</td>\r\n            <td>{props.ticker}</td>\r\n            <td>{props.showBalance ? props.balance : \"*****\"}</td>\r\n            <td>${props.price}</td>\r\n            <td><button onClick={handleClick}>Refresh</button></td>\r\n        </CoinRow>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nCoin.propTypes  = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}","import React from 'react'\r\nimport Coin from \"../Coin/Coin\";\r\n\r\nexport default function CoinList(props) {\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Balance</th>\r\n                <th>Price</th>\r\n                <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    props.coinData.map((element) => \r\n                        <Coin \r\n                            handleRefresh={props.handleRefresh} \r\n                            showBalance={props.showBalance}\r\n                            {...element} />\r\n                    )\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding-left: 5rem;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    const buttonText = props.showBalance ?\r\n        \"Hide Balance\" : \"Show Balance\";\r\n\r\n    const toggleShowBalance = (event) => {\r\n            event.preventDefault();\r\n            props.toggleShowBalance();\r\n        }\r\n\r\n    return (\r\n        <Section>\r\n        Balance: ${props.showBalance ? props.amount : \"*****\"}\r\n        <button onClick={toggleShowBalance}>{buttonText}</button>\r\n        </Section>\r\n    )\r\n\r\n    \r\n};\r\n\r\n\r\n\r\nAccountBalance.propTypes  = {\r\n    amount: PropTypes.number.isRequired,\r\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n//import './App.css';\n//port Coin from './components/Coin/Coin';\nimport ExchangeHeader from './components/ExchangeHeader';\n//import CoinpaprikaList from './components/CoinpaprikaList';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\ntext-align: center;\nbackground-color: blue;\ncolor: white;\n`;\n\nconst NUM_COINS = 4;\n  \nfunction App(props) {\n\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n  \n  const getPrice = async (id) => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/tickers/'+id);\n    const coin = response.data;\n    console.log(coin.quotes.USD);\n    return parseFloat(coin.quotes.USD.price.toFixed(4));\n  };\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0,NUM_COINS).map(coin => coin.id);\n    const promises = coinIds.map(id => axios.get('https://api.coinpaprika.com/v1/tickers/'+id));\n    const responses = await Promise.all(promises);\n\n    const newCoinData = responses.map(function(response) {\n      const coin = response.data;\n      console.log(coin.quotes.USD);\n      return {\n        key: coin.id,\n        id: coin.id,\n        ticker: coin.symbol,\n        name: coin.name,\n        balance: coin.rank,\n        price: parseFloat(coin.quotes.USD.price.toFixed(4)),\n      }\n    });\n\n    setCoinData(newCoinData);\n  }\n\n  useEffect(function(){\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const toggleShowBalance = () => {\n    setShowBalance(!showBalance);\n  }\n\n  const handleRefresh = async (idToChange) => {\n\n    const newPrice = await getPrice(idToChange);\n\n    // set the state\n    const newCoinData = coinData.map(function(values) {\n      let newValues = {...values};\n      if (newValues.id === idToChange) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    //debugger;\n    console.log(newCoinData);\n    setCoinData(newCoinData);\n  \n  }\n\n  let totalBalance = 0;\n  coinData && coinData.map((element) => {\n      return totalBalance += element.balance * element.price;\n  });\n      \n  return (\n    <Div>\n      <ExchangeHeader/>\n      <AccountBalance \n        amount={totalBalance} \n        toggleShowBalance={toggleShowBalance} \n        showBalance={showBalance}/>\n      {\n        (coinData.length > 0) ? <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleRefresh={handleRefresh}/>\n        : null\n      }\n      {//this.state.coinData ? \n        // <CoinpaprikaList coins={this.state.coinData}/> : \n        //   null\n      }\n    </Div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}